name: "Lint-Server"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install black~=23.0
      - run: black .

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install flake8
      - run: flake8

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_taskmanagement  # Changed to test_ prefix
          POSTGRES_USER: taskuser
          POSTGRES_PASSWORD: securepassword123
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U taskuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      CI: "true"  # Added to trigger test settings
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      POSTGRES_DB: test_taskmanagement  # Changed to match service
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: securepassword123
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      DJANGO_SETTINGS_MODULE: task.settings
      PYTHONUNBUFFERED: 1
      DJANGO_SECURE_SSL_REDIRECT: '0' 

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for DB to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          export PGPASSWORD=$POSTGRES_PASSWORD
          until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
            echo "Database not ready - sleeping"
            sleep 2
          done
          echo "Database connection established!"

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Run Django tests
        run: |
          python manage.py test --settings=task.test_settings
